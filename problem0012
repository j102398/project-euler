import time

start_time = time.time()
def divisors(number): # function to return all divisors
    divisor_list = []
    for divisor in range(1,int(number ** 0.5) + 1): #loop up until the square root, as this will get all division pairs. looping beyond will have the divisor pairs in a flipped order.
        if number % divisor == 0: #if the number is divisible by the certain divisor
            div = number // divisor # work out how many times the divisor goes into number


            divisor_list.append((divisor, div))
    return divisor_list


current_divisor_count = 0
n = 1
while current_divisor_count <= 500:
    triangular_number = int((n*(n+1)) / 2)
    current_divisor_count = len(divisors(triangular_number)) * 2 #as the function returns divisor pairs
    n += 1
    if current_divisor_count > 500:
        print(triangular_number)

end_time = time.time()

print(f"Elapsed time : {end_time-start_time}s")
